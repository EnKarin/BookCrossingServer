server:
    port: ${port:8443}
    servlet:
        session:
            cookie:
                http-only: true
                secure: true
            tracking-modes: cookie
    ssl:
        enabled: true
        key-store: classpath:keystore.p12
        keyStoreType: PKCS12
        key-alias: tomcat
        key-store-password: Sw1982

spring:
    jpa:
        hibernate:
            ddl-auto: validate
        database-platform: org.hibernate.dialect.PostgreSQLDialect
        properties:
            hibernate:
                connection:
                    characterEncoding: utf-8
                    CharSet: utf-8
                    useUnicode: true
                default_schema: bookcrossing
                enable_lazy_load_no_trans: false
        open-in-view: false
        show-sql: false
    datasource:
        url: jdbc:postgresql://localhost:6432/bookcrossing
        username: postgres
        password: 123456
        driver-class-name: org.postgresql.Driver
    servlet:
        multipart:
            max-file-size: 5MB
            max-request-size: 6MB
    mail:
        from: noreply@bookscrossing.com
        password: lgwr qqwh ttbh frhv
        username: bookscrossingdiploma@gmail.com
        host: smtp.gmail.com
        port: 587
        protocol: smtp
        properties:
            mail:
                smtp:
                    auth: true
                    starttls:
                        enable: true
    flyway:
        enabled: true
        default-schema: bookcrossing
jwt:
    secret: dmVyeV92ZXJ5X2xvbmdfc2VjcmV0X2tleV9mb3Jfand0X3NpZ25hdHVyZQ== # very_very_long_secret_key_for_jwt_signature
time:
    zone-offset: 7

management:
    server:
        port: 8090
    endpoints:
        web:
            exposure.include: health,prometheus,info,threaddump,heapdump,openapi,swaggerui,flyway
            cors:
                allowed-methods: '*'
                allowed-origins: '*'
                allowed-headers: '*'
        access:
            default: read_only
    endpoint:
        health:
            probes.enabled: true
            group:
                readiness:
                    include: readinessState,db
                    additional-path: server:/readyz # To collect probes from application main port
            access: read_only
        prometheus:
            access: read_only
        info:
            access: read_only
        threaddump:
            access: read_only
        heapdump:
            access: read_only
        flyway:
            access: read_only
    metrics:
        distribution:
            percentiles-histogram:
                http.server.requests: true
            minimum-expected-value:
                http.server.requests: 10ms
            maximum-expected-value:
                http.server.requests: 10s
            slo:
                http.server.requests: 1s
    info:
        env.enabled: true
    health:
        livenessstate:
            enabled: true
        readinessstate:
            enabled: true
    prometheus:
        metrics:
            export:
                enabled: true

springdoc:
    show-actuator: true
    use-management-port: true

info:
    app.version: @project.version@
