<?xml version="1.0"?>
<ruleset name="Custom ruleset">
    <description>PMD configuration</description>

    <rule ref="category/java/bestpractices.xml">
        <exclude name="JUnitTestsShouldIncludeAssert"/>
        <exclude name="JUnitTestContainsTooManyAsserts"/>
        <exclude name="JUnitAssertionsShouldIncludeMessage"/>
        <exclude name="GuardLogStatement"/>
    </rule>

    <rule ref="category/java/bestpractices.xml/AbstractClassWithoutAbstractMethod">
        <properties>
            <property name="violationSuppressXPath" value="./ancestor-or-self::ClassDeclaration[matches(@SimpleName, '^.*BaseTests$')]"/>
        </properties>
    </rule>

    <rule ref="category/java/bestpractices.xml/LooseCoupling">
        <properties>
            <property name="allowedTypes" value="org.springframework.http.HttpHeaders" />
        </properties>
    </rule>

    <rule ref="category/java/codestyle.xml">
        <exclude name="OnlyOneReturn"/>
        <exclude name="AtLeastOneConstructor"/>
        <exclude name="CommentDefaultAccessModifier"/>
        <exclude name="LongVariable"/>
        <exclude name="ShortClassName"/>
        <exclude name="PrematureDeclaration"/>
        <exclude name="UseExplicitTypes"/>
        <exclude name="UnnecessaryAnnotationValueElement"/>
    </rule>

    <rule ref="category/java/codestyle.xml/ClassNamingConventions">
        <properties>
            <property name="utilityClassPattern" value="[A-Z][a-zA-Z0-9]*"/>
        </properties>
    </rule>

    <rule ref="category/java/codestyle.xml/LinguisticNaming">
        <properties>
            <property name="checkSetters" value="false"/>
            <property name="violationSuppressXPath" value=".[pmd-java:hasAnnotation('org.junit.jupiter.api.Test')]"/>
        </properties>
    </rule>

    <rule ref="category/java/codestyle.xml/FieldNamingConventions">
        <properties>
            <property name="exclusions" value="serialVersionUID, logger"/>
        </properties>
    </rule>

    <rule ref="category/java/design.xml">
        <exclude name="LawOfDemeter"/>
        <exclude name="LoosePackageCoupling"/>
        <exclude name="AvoidDeeplyNestedIfStmts"/>
        <exclude name="AvoidCatchingGenericException"/>
        <exclude name="UseObjectForClearerAPI"/>
        <exclude name="UseUtilityClass"/>
        <exclude name="ClassWithOnlyPrivateConstructorsShouldBeFinal"/>
        <exclude name="DataClass"/>
        <exclude name="TooManyMethods"/>
    </rule>

    <rule ref="category/java/design.xml/AbstractClassWithoutAnyMethod">
        <properties>
            <property name="violationSuppressXPath" value="./ancestor-or-self::ClassDeclaration[matches(@SimpleName, '^.*BaseTests$')]"/>
        </properties>
    </rule>

    <rule ref="category/java/design.xml/ExcessiveImports">
        <properties>
            <property name="minimum" value="37" />
        </properties>
    </rule>

    <rule ref="category/java/design.xml/SimplifyBooleanReturns">
        <properties>
            <property name="violationSuppressXPath" value="./ancestor::*[@Name = 'equals'] | ./ancestor::*[@Name = 'hashCode'] | ./ancestor::*[@Name = 'test']"/>
        </properties>
    </rule>

    <rule ref="category/java/documentation.xml">
        <exclude name="CommentRequired"/>
        <exclude name="CommentSize"/>
        <exclude name="UncommentedEmptyConstructor"/>
    </rule>

    <rule ref="category/java/multithreading.xml">
        <exclude name="UseConcurrentHashMap"/>
    </rule>

    <rule ref="category/java/performance.xml"/>

    <rule ref="category/java/security.xml"/>

    <rule ref="category/java/errorprone.xml">
        <exclude name="AvoidLiteralsInIfCondition"/>
        <exclude name="AvoidFieldNameMatchingTypeName"/>
        <exclude name="AvoidFieldNameMatchingMethodName"/>
        <exclude name="AvoidDuplicateLiterals"/>
        <exclude name="AvoidAccessibilityAlteration"/>
        <exclude name="NullAssignment"/>
    </rule>
</ruleset>
